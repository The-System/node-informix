
#include <cstdio>
#include "esqlc.h"


namespace esqlc {

	int32_t connect( const char * db, const char * id ) {

		EXEC SQL BEGIN DECLARE SECTION;

		const char * esql_db = db;
		const char * esql_id = id;

		EXEC SQL END DECLARE SECTION;


		EXEC SQL connect to :esql_db as :esql_id WITH CONCURRENT TRANSACTION;
		return SQLCODE;

	};


	std::string errmsg( int32_t code ) {

		char buffer[512];
		int n, r, msg_len;

		n = snprintf( buffer, 64, "[%d] ", code );
		r = rgetlmsg( code, ( buffer + n ), ( sizeof( buffer ) - ( n + 1 ) ), &msg_len );

		if ( r == 0 ) {
			// rgetlmsg() returns a \n as well which we don't want
			buffer[n + (msg_len - 1)] = '\0';
		} else {
			snprintf( ( buffer + n ), ( sizeof( buffer ) - ( n + 1 ) ), "(Failed to get error message, rgetlmsg() returned with %d)", r );
		}

		return std::string( buffer );

	};

}

